name: Docker build and push container

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Operator2024'
    permissions:
      contents: read
      packages: write
      id-token: write
    # strategy:
    #   matrix:
    #     platform:
    #       - linux/amd64
    #       - linux/arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master

      - shell: bash
        name: Create wg0 configuration file
        run: |
          sudo mkdir -p ./Docker/etc/wireguard
          sudo touch ./Docker/etc/wireguard/wg0.json

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # with:
        #   platforms: ${{ matrix.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
        #   platforms: ${{ matrix.platform }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./Docker/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # platforms: ${{ matrix.platform }}
          provenance: mode=max
          cache-from: type=gha
          cache-to: type=gha,mode=max
